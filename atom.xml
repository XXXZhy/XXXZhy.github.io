<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zhy丶Blog</title>
  
  <subtitle>ZhyBlog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.blogzhy.top/"/>
  <updated>2020-05-09T17:26:08.782Z</updated>
  <id>https://www.blogzhy.top/</id>
  
  <author>
    <name>Zhy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Google Drive无限容量目录索引网盘</title>
    <link href="https://www.blogzhy.top/2020/05/09/Google%20Drive%E6%97%A0%E9%99%90%E5%AE%B9%E9%87%8F%E7%9B%AE%E5%BD%95%E7%B4%A2%E5%BC%95%E7%BD%91%E7%9B%98/"/>
    <id>https://www.blogzhy.top/2020/05/09/Google%20Drive%E6%97%A0%E9%99%90%E5%AE%B9%E9%87%8F%E7%9B%AE%E5%BD%95%E7%B4%A2%E5%BC%95%E7%BD%91%E7%9B%98/</id>
    <published>2020-05-09T15:09:22.000Z</published>
    <updated>2020-05-09T17:26:08.782Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-效果&quot;&gt;&lt;a href=&quot;#1-效果&quot; class=&quot;headerlink&quot; title=&quot;1 效果&quot;&gt;&lt;/a&gt;1 效果&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://oss.zhy-goindex.workers.dev/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://oss.zhy-goindex.workers.dev/&lt;/a&gt;&lt;/p&gt;
&lt;img src=&quot;/2020/05/09/Google%20Drive%E6%97%A0%E9%99%90%E5%AE%B9%E9%87%8F%E7%9B%AE%E5%BD%95%E7%B4%A2%E5%BC%95%E7%BD%91%E7%9B%98/1.png&quot; class=&quot;&quot;&gt;
    
    </summary>
    
    
      <category term="软件推荐" scheme="https://www.blogzhy.top/categories/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    
      <category term="个人博客" scheme="https://www.blogzhy.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Google Drive" scheme="https://www.blogzhy.top/tags/Google-Drive/"/>
    
  </entry>
  
  <entry>
    <title>Python（函数）</title>
    <link href="https://www.blogzhy.top/2020/05/09/Python%EF%BC%88%E5%87%BD%E6%95%B0%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/05/09/Python%EF%BC%88%E5%87%BD%E6%95%B0%EF%BC%89/</id>
    <published>2020-05-09T02:30:00.000Z</published>
    <updated>2020-05-09T02:36:30.192Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/05/09/Python（函数）/#1&quot;&gt;1 函数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/05/09/Python（函数）/#2&quot;&gt;2 定义函数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/05/09/Python（函数）/#3&quot;&gt;3 函数调用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/05/09/Python（函数）/#4&quot;&gt;4 函数的返回值&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/05/09/Python（函数）/#5&quot;&gt;5 函数的参数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/05/09/Python（函数）/#6&quot;&gt;6 匿名函数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/05/09/Python（函数）/#7&quot;&gt;7 局部变量和全局变&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/05/09/Python（函数）/#8&quot;&gt;8 内置函数&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-函数&quot;&gt;&lt;a href=&quot;#1-函数&quot; class=&quot;headerlink&quot; title=&quot;1 函数&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;1 函数&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。&lt;/p&gt;
&lt;p&gt;函数能提高应用的模块性，和代码的重复利用率。&lt;/p&gt;
&lt;p&gt;你已经知道 Python 提供了许多内置函数，比如 print().range()函数等等。当然也可以自己创建实现某个预设功能的函数，这被叫做用户自定义函数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内置函数&lt;/li&gt;
&lt;li&gt;自定义函数&lt;/li&gt;
&lt;li&gt;标准库函数&lt;/li&gt;
&lt;li&gt;第三方库函数&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://www.blogzhy.top/categories/Python/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="https://www.blogzhy.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python（字典、集合）</title>
    <link href="https://www.blogzhy.top/2020/05/08/Python%EF%BC%88%E5%AD%97%E5%85%B8%E3%80%81%E9%9B%86%E5%90%88%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/05/08/Python%EF%BC%88%E5%AD%97%E5%85%B8%E3%80%81%E9%9B%86%E5%90%88%EF%BC%89/</id>
    <published>2020-05-08T02:57:34.000Z</published>
    <updated>2020-05-09T02:37:35.919Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/05/08/Python（字典、集合）/#1&quot;&gt;1 字典&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/05/08/Python（字典、集合）/#2&quot;&gt;2 集合&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/05/08/Python（字典、集合）/#3&quot;&gt;3 组合数据类型总结&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-字典&quot;&gt;&lt;a href=&quot;#1-字典&quot; class=&quot;headerlink&quot; title=&quot;1 字典&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;1 字典&lt;/span&gt;&lt;/h1&gt;&lt;h2 id=&quot;1-1-字典的定义&quot;&gt;&lt;a href=&quot;#1-1-字典的定义&quot; class=&quot;headerlink&quot; title=&quot;1.1 字典的定义&quot;&gt;&lt;/a&gt;1.1 字典的定义&lt;/h2&gt;&lt;p&gt;&lt;font color=&quot;red&quot;&gt;字典：映射类型，dict  &lt;/font&gt;&lt;/p&gt;
&lt;p&gt; 元素是键值对（key : value）&lt;/p&gt;
&lt;p&gt; 多个元素放在{ }中，用逗号隔开。&lt;/p&gt;
&lt;p&gt; {  key1：value1  , key2：value2 ,…… }&lt;/p&gt;
&lt;p&gt;键（key）是唯一的，必须是不可变类型，比如整数、实数、字符串、元组等；&lt;/p&gt;
&lt;p&gt;键值（value）是任意是，也可以是字典、列表、元祖等；&lt;/p&gt;
&lt;p&gt;字典是&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;无序&lt;/strong&gt;&lt;/font&gt;的，只能通过‘键’访问元素&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://www.blogzhy.top/categories/Python/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="https://www.blogzhy.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>JSP（第八章：Struts2）</title>
    <link href="https://www.blogzhy.top/2020/04/29/JSP%EF%BC%88%E7%AC%AC%E5%85%AB%E7%AB%A0%EF%BC%9AStruts2%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/29/JSP%EF%BC%88%E7%AC%AC%E5%85%AB%E7%AB%A0%EF%BC%9AStruts2%EF%BC%89/</id>
    <published>2020-04-29T14:19:14.000Z</published>
    <updated>2020-04-29T16:10:43.684Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Struts官方网站：&lt;a href=&quot;https://struts.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://struts.apache.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-第一个Struts2页面&quot;&gt;&lt;a href=&quot;#1-第一个Struts2页面&quot; class=&quot;headerlink&quot; title=&quot;1 第一个Struts2页面&quot;&gt;&lt;/a&gt;1 第一个Struts2页面&lt;/h2&gt;&lt;p&gt;【导入jar包】:&lt;/p&gt;
&lt;img src=&quot;/2020/04/29/JSP%EF%BC%88%E7%AC%AC%E5%85%AB%E7%AB%A0%EF%BC%9AStruts2%EF%BC%89/1.png&quot; class=&quot;&quot;&gt;

&lt;p&gt;【WEB-INF/web.xml】：&lt;strong&gt;struts2实质就是过滤器实现&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;jsp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;web-app xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xmlns=&amp;quot;http://xmlns.jcp.org/xml/ns/javaee&amp;quot; xsi:schemaLocation=&amp;quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&amp;quot; id=&amp;quot;WebApp_ID&amp;quot; version=&amp;quot;4.0&amp;quot;&amp;gt;
  &amp;lt;display-name&amp;gt;JSPStruts2&amp;lt;/display-name&amp;gt;
  &amp;lt;filter&amp;gt;
    &amp;lt;filter-name&amp;gt;struts2&amp;lt;/filter-name&amp;gt;
       &amp;lt;filter-class&amp;gt;
            org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
      &amp;lt;/filter-class&amp;gt;
  &amp;lt;/filter&amp;gt;
  &amp;lt;filter-mapping&amp;gt;
      &amp;lt;filter-name&amp;gt;struts2&amp;lt;/filter-name&amp;gt;
      &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;
  &amp;lt;/filter-mapping&amp;gt;

  &amp;lt;welcome-file-list&amp;gt;
    &amp;lt;welcome-file&amp;gt;index.html&amp;lt;/welcome-file&amp;gt;
    &amp;lt;welcome-file&amp;gt;index.htm&amp;lt;/welcome-file&amp;gt;
    &amp;lt;welcome-file&amp;gt;index.jsp&amp;lt;/welcome-file&amp;gt;
    &amp;lt;welcome-file&amp;gt;default.html&amp;lt;/welcome-file&amp;gt;
    &amp;lt;welcome-file&amp;gt;default.htm&amp;lt;/welcome-file&amp;gt;
    &amp;lt;welcome-file&amp;gt;default.jsp&amp;lt;/welcome-file&amp;gt;
  &amp;lt;/welcome-file-list&amp;gt;
&amp;lt;/web-app&amp;gt;&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="JSP" scheme="https://www.blogzhy.top/categories/JSP/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JSP" scheme="https://www.blogzhy.top/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>JSP（第七章：JSTL核心标签库）</title>
    <link href="https://www.blogzhy.top/2020/04/29/JSP%EF%BC%88%E7%AC%AC%E4%B8%83%E7%AB%A0%EF%BC%9AJSTL%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/29/JSP%EF%BC%88%E7%AC%AC%E4%B8%83%E7%AB%A0%EF%BC%9AJSTL%EF%BC%89/</id>
    <published>2020-04-29T02:25:29.000Z</published>
    <updated>2020-05-03T12:19:17.049Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/29/JSP（第七章：JSTL）/#1&quot;&gt;1 JSTL标签库分类&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/29/JSP（第七章：JSTL）/#2&quot;&gt;2 表达式控制标签&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/29/JSP（第七章：JSTL）/#3&quot;&gt;3 流程控制标签&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/29/JSP（第七章：JSTL）/#4&quot;&gt;4 循环标签&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/29/JSP（第七章：JSTL）/#5&quot;&gt;5 URL操作标签&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-JSTL标签库分类&quot;&gt;&lt;a href=&quot;#1-JSTL标签库分类&quot; class=&quot;headerlink&quot; title=&quot;1 JSTL标签库分类&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;1 JSTL标签库分类&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;JSTL标签库的使用是为了弥补html表示的不足，规范自定义标签的使用而诞生的。在告别modle1模式开发应用程序后，人们开始注重软件的分层设计，不希望在JSP页面中出现java逻辑代码，同时也由于自定义标签的开发难度较大和不利于技术标准化产生了自定义标签库。&lt;/p&gt;
&lt;p&gt;JSTL标签库可分为5类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;核心标签库&lt;/li&gt;
&lt;li&gt;I18N格式化标签库&lt;/li&gt;
&lt;li&gt;SQL标签库&lt;/li&gt;
&lt;li&gt;XML标签库&lt;/li&gt;
&lt;li&gt;函数标签库&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-1-核心标签库&quot;&gt;&lt;a href=&quot;#1-1-核心标签库&quot; class=&quot;headerlink&quot; title=&quot;1.1 核心标签库&quot;&gt;&lt;/a&gt;1.1 核心标签库&lt;/h2&gt;&lt;p&gt;JSTL的核心标签库标签共13个，从功能上可以分为4类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表达式控制标签：out标签、set标签、remove标签、catch标签&lt;/li&gt;
&lt;li&gt;流程控制标签：if标签、choose标签、when标签、otherwise标签&lt;/li&gt;
&lt;li&gt;循环标签：forEach标签、forTokens标签&lt;/li&gt;
&lt;li&gt;URL操作标签：import标签、url标签、redirect标签&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JSP" scheme="https://www.blogzhy.top/categories/JSP/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JSP" scheme="https://www.blogzhy.top/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>软件项目管理（第六章：IT项目成本管理）</title>
    <link href="https://www.blogzhy.top/2020/04/29/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%EF%BC%88%E7%AC%AC%E5%85%AD%E7%AB%A0%EF%BC%9AIT%E9%A1%B9%E7%9B%AE%E6%88%90%E6%9C%AC%E7%AE%A1%E7%90%86%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/29/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%EF%BC%88%E7%AC%AC%E5%85%AD%E7%AB%A0%EF%BC%9AIT%E9%A1%B9%E7%9B%AE%E6%88%90%E6%9C%AC%E7%AE%A1%E7%90%86%EF%BC%89/</id>
    <published>2020-04-29T00:29:35.000Z</published>
    <updated>2020-05-06T14:40:15.056Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/29/软件项目管理（第六章：IT项目成本管理）/#1&quot;&gt;6.1 成本管理概述&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/29/软件项目管理（第六章：IT项目成本管理）/#2&quot;&gt;6.2 项目成本估算&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/29/软件项目管理（第六章：IT项目成本管理）/#3&quot;&gt;6.3 项目成本预算&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/29/软件项目管理（第六章：IT项目成本管理）/#4&quot;&gt;6.4 成本控制&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/29/软件项目管理（第六章：IT项目成本管理）/#5&quot;&gt;6.5 项目成本效益分析&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;6-1-成本管理概述&quot;&gt;&lt;a href=&quot;#6-1-成本管理概述&quot; class=&quot;headerlink&quot; title=&quot;6.1 成本管理概述&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;6.1 成本管理概述&lt;/span&gt;&lt;/h1&gt;&lt;h2 id=&quot;6-1-1-项目成本与成本特点&quot;&gt;&lt;a href=&quot;#6-1-1-项目成本与成本特点&quot; class=&quot;headerlink&quot; title=&quot;6.1.1 项目成本与成本特点&quot;&gt;&lt;/a&gt;6.1.1 项目成本与成本特点&lt;/h2&gt;&lt;h4 id=&quot;1-全生命周期成本&quot;&gt;&lt;a href=&quot;#1-全生命周期成本&quot; class=&quot;headerlink&quot; title=&quot;1. 全生命周期成本&quot;&gt;&lt;/a&gt;1. 全生命周期成本&lt;/h4&gt;&lt;p&gt;对工程项目的全过程、全要素、全体人员、全风险的成本管理观念。&lt;/p&gt;
&lt;p&gt;开发阶段、后期维护统筹考虑。&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件项目管理" scheme="https://www.blogzhy.top/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="软件项目管理" scheme="https://www.blogzhy.top/tags/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>JSP（第六章：EL）</title>
    <link href="https://www.blogzhy.top/2020/04/28/JSP%EF%BC%88%E7%AC%AC%E5%85%AD%E7%AB%A0%EF%BC%9AEL%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/28/JSP%EF%BC%88%E7%AC%AC%E5%85%AD%E7%AB%A0%EF%BC%9AEL%EF%BC%89/</id>
    <published>2020-04-28T11:43:57.000Z</published>
    <updated>2020-04-28T13:42:14.462Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/28/JSP（第六章：EL）/#1&quot;&gt;1 EL概述&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/28/JSP（第六章：EL）/#2&quot;&gt;2 EL运算符&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/28/JSP（第六章：EL）/#3&quot;&gt;3 EL的隐含对象&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/28/JSP（第六章：EL）/#4&quot;&gt;4 定义和使用EL函数&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JSTL(JSP Standard Tag Library) 是JSP标准标签库，不依赖于哪个框架。在Servlet2.4以上容器使用。由两部分组成：标签库+EL表达式(表达式语言)。EL表达式可以单独使用，不用引入任何包，要求容器是2.4以上，JSP2.0支持或J2EE1.4要支持。&lt;/p&gt;
&lt;h1 id=&quot;1-EL概述&quot;&gt;&lt;a href=&quot;#1-EL概述&quot; class=&quot;headerlink&quot; title=&quot;1 EL概述&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;1 EL概述&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;EL是表达式语言，通过EL可以简化在JSP开发中对对象的引用。EL为不熟悉Java语言页面开发的人员提供了一个开发Java Web应用的新途径。目的:为了使JSP写起来更加简单。它提供了在 JSP 中简化表达式的方法。&lt;/p&gt;
&lt;h2 id=&quot;1-1-EL基本的语法&quot;&gt;&lt;a href=&quot;#1-1-EL基本的语法&quot; class=&quot;headerlink&quot; title=&quot;1.1 EL基本的语法&quot;&gt;&lt;/a&gt;1.1 EL基本的语法&lt;/h2&gt;&lt;p&gt;EL表达式必须以“ ${expression} ”来表示，其中“ expression ”部分就是具体表达式内容，“ ${} ”将这个表达式内容包含在其中作为 EL 表达式的定义。&lt;/p&gt;
&lt;p&gt;EL存取变量数据的方法很简单，例如:${username}。它的意思是取出某一范围中名称为username的变量。&lt;/p&gt;
&lt;p&gt;因为我们并没有指定哪一个范围的username，所以它会依序从&lt;strong&gt;Page、Request、Session、Application&lt;/strong&gt;范围查找。假如途中找到username，就直接回传，不再继续找下去，但是假如全部的范围都没有找到时，就回传null。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JSP" scheme="https://www.blogzhy.top/categories/JSP/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JSP" scheme="https://www.blogzhy.top/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>付费文档</title>
    <link href="https://www.blogzhy.top/2020/04/28/%E4%BB%98%E8%B4%B9%E6%96%87%E6%A1%A3/"/>
    <id>https://www.blogzhy.top/2020/04/28/%E4%BB%98%E8%B4%B9%E6%96%87%E6%A1%A3/</id>
    <published>2020-04-28T09:04:09.000Z</published>
    <updated>2020-04-28T13:55:31.361Z</updated>
    
    <summary type="html">
    
      好奇吗？这个文档已被加密！
    
    </summary>
    
    
      <category term="个人博客" scheme="https://www.blogzhy.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="加密文件" scheme="https://www.blogzhy.top/categories/%E5%8A%A0%E5%AF%86%E6%96%87%E4%BB%B6/"/>
    
    
      <category term="Hexo插件" scheme="https://www.blogzhy.top/tags/Hexo%E6%8F%92%E4%BB%B6/"/>
    
      <category term="加密" scheme="https://www.blogzhy.top/tags/%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>JSP（第五章：Servlet）</title>
    <link href="https://www.blogzhy.top/2020/04/27/JSP%EF%BC%88%E7%AC%AC%E4%BA%94%E7%AB%A0%EF%BC%9AServlet%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/27/JSP%EF%BC%88%E7%AC%AC%E4%BA%94%E7%AB%A0%EF%BC%9AServlet%EF%BC%89/</id>
    <published>2020-04-27T09:22:30.000Z</published>
    <updated>2020-04-28T07:40:37.845Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/27/JSP（第五章：Servlet）/#1&quot;&gt;1 Servlet基础&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/27/JSP（第五章：Servlet）/#2&quot;&gt;2 Servlet技术开发&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/27/JSP（第五章：Servlet）/#3&quot;&gt;3 Servlet的典型应用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/27/JSP（第五章：Servlet）/#4&quot;&gt;4 Servlet例子&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/27/JSP（第五章：Servlet）/#5&quot;&gt;5 Servlet过滤器&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-Servlet基础&quot;&gt;&lt;a href=&quot;#1-Servlet基础&quot; class=&quot;headerlink&quot; title=&quot;1 Servlet基础&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;1 Servlet基础&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;Servlet是按照Servlet规范编写的Java类，使用Java Servlet接口(API)，它可以处理Web应用中的相关请求。&lt;br&gt;Servlet是一种服务器端的Java应用程序，它的功能就是处理客户端请求，并做出响应。&lt;/p&gt;
&lt;h2 id=&quot;1-1-model-2-模式&quot;&gt;&lt;a href=&quot;#1-1-model-2-模式&quot; class=&quot;headerlink&quot; title=&quot;1.1 model 2 模式&quot;&gt;&lt;/a&gt;1.1 model 2 模式&lt;/h2&gt;&lt;p&gt;model 2 模式=JSP+Servlet+JavaBean&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Controller：应用程序中用户交互部分（Servlet）&lt;/li&gt;
&lt;li&gt;Model：应用程序数据逻辑部分（JavaBeans）&lt;/li&gt;
&lt;li&gt;View：数据显示部分（JSP）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JSP" scheme="https://www.blogzhy.top/categories/JSP/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JSP" scheme="https://www.blogzhy.top/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>JSP（第四章：JavaBean）</title>
    <link href="https://www.blogzhy.top/2020/04/27/JSP%EF%BC%88%E7%AC%AC%E5%9B%9B%E7%AB%A0%EF%BC%9AJavaBean%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/27/JSP%EF%BC%88%E7%AC%AC%E5%9B%9B%E7%AB%A0%EF%BC%9AJavaBean%EF%BC%89/</id>
    <published>2020-04-27T07:29:46.000Z</published>
    <updated>2020-04-27T09:25:17.982Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/27/JSP（第四章：JavaBean）/#1&quot;&gt;1 JavaBean概述&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/27/JSP（第四章：JavaBean）/#2&quot;&gt;2 JavaBean种类&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/27/JSP（第四章：JavaBean）/#3&quot;&gt;3 获取JavaBean属性信息&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-JavaBean概述&quot;&gt;&lt;a href=&quot;#1-JavaBean概述&quot; class=&quot;headerlink&quot; title=&quot;1 JavaBean概述&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;1 JavaBean概述&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;纯JSP开发模式：&lt;/p&gt;
&lt;img src=&quot;/2020/04/27/JSP%EF%BC%88%E7%AC%AC%E5%9B%9B%E7%AB%A0%EF%BC%9AJavaBean%EF%BC%89/1.png&quot; class=&quot;&quot;&gt;

&lt;p&gt;JSP+JavaBean开发模式：&lt;/p&gt;
&lt;img src=&quot;/2020/04/27/JSP%EF%BC%88%E7%AC%AC%E5%9B%9B%E7%AB%A0%EF%BC%9AJavaBean%EF%BC%89/2.png&quot; class=&quot;&quot;&gt;
    
    </summary>
    
    
      <category term="JSP" scheme="https://www.blogzhy.top/categories/JSP/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JSP" scheme="https://www.blogzhy.top/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>JSP（第三章：JSP内置对象）</title>
    <link href="https://www.blogzhy.top/2020/04/26/JSP%EF%BC%88%E7%AC%AC%E4%B8%89%E7%AB%A0%EF%BC%9AJSP%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/26/JSP%EF%BC%88%E7%AC%AC%E4%B8%89%E7%AB%A0%EF%BC%9AJSP%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%EF%BC%89/</id>
    <published>2020-04-26T05:35:55.000Z</published>
    <updated>2020-04-27T07:15:56.601Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/26/JSP（第三章：JSP内置对象）/#1&quot;&gt;1 out对象&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/26/JSP（第三章：JSP内置对象）/#2&quot;&gt;2 request对象&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/26/JSP（第三章：JSP内置对象）/#3&quot;&gt;3 response对象&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/26/JSP（第三章：JSP内置对象）/#4&quot;&gt;4 session对象&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/26/JSP（第三章：JSP内置对象）/#5&quot;&gt;5 pageContext对象&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/26/JSP（第三章：JSP内置对象）/#6&quot;&gt;6 application对象&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/26/JSP（第三章：JSP内置对象）/#7&quot;&gt;7 config对象&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/26/JSP（第三章：JSP内置对象）/#8&quot;&gt;8 cookie对象&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;内置对象：不加声明就可以在JSP页面脚本中使用的成员变量，使用这些对象可以更容易收集客户端发送的请求信息，响应客户端的请求及存储客户信息。&lt;/p&gt;
&lt;p&gt;分别为：request、response、out、session、application、config、pageContext、page、exception、cookie&lt;/p&gt;
    
    </summary>
    
    
      <category term="JSP" scheme="https://www.blogzhy.top/categories/JSP/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JSP" scheme="https://www.blogzhy.top/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>UML（第六章：状态图、活动图）</title>
    <link href="https://www.blogzhy.top/2020/04/24/UML%EF%BC%88%E7%AC%AC%E5%85%AD%E7%AB%A0%EF%BC%9A%E7%8A%B6%E6%80%81%E5%9B%BE%E3%80%81%E6%B4%BB%E5%8A%A8%E5%9B%BE%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/24/UML%EF%BC%88%E7%AC%AC%E5%85%AD%E7%AB%A0%EF%BC%9A%E7%8A%B6%E6%80%81%E5%9B%BE%E3%80%81%E6%B4%BB%E5%8A%A8%E5%9B%BE%EF%BC%89/</id>
    <published>2020-04-24T05:31:34.000Z</published>
    <updated>2020-04-24T09:32:06.092Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;6-1-行为模型概述&quot;&gt;&lt;a href=&quot;#6-1-行为模型概述&quot; class=&quot;headerlink&quot; title=&quot;6.1 行为模型概述&quot;&gt;&lt;/a&gt;6.1 行为模型概述&lt;/h1&gt;&lt;h2 id=&quot;6-1-1-行为模型&quot;&gt;&lt;a href=&quot;#6-1-1-行为模型&quot; class=&quot;headerlink&quot; title=&quot;6.1.1 行为模型&quot;&gt;&lt;/a&gt;6.1.1 行为模型&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;行为模型包括：&lt;/strong&gt;状态模型、活动模型、交互模型&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;状态模型&lt;/strong&gt;——关注一个对象的生命周期内的状态及状态变迁，以及引起状态变迁的事件和对象在状态中的动作等。（状态图）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;活动模型&lt;/strong&gt;——用于描述对象的一个活动到另一个活动的控制流、活动的序列、工作的流程和并发的处理行为等。（活动图）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;交互模型&lt;/strong&gt;——强调对象间的合作关系与时间顺序，通过对象间的消息传递来完成系统的交互。（顺序图、协作图）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;状态模型涉及一个对象，活动模型和交互模型涉及多个对象&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="UML" scheme="https://www.blogzhy.top/categories/UML/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="UML" scheme="https://www.blogzhy.top/tags/UML/"/>
    
  </entry>
  
  <entry>
    <title>Python（列表、元组）</title>
    <link href="https://www.blogzhy.top/2020/04/23/Python%EF%BC%88%E5%88%97%E8%A1%A8%E3%80%81%E5%85%83%E7%BB%84%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/23/Python%EF%BC%88%E5%88%97%E8%A1%A8%E3%80%81%E5%85%83%E7%BB%84%EF%BC%89/</id>
    <published>2020-04-23T07:35:30.000Z</published>
    <updated>2020-04-24T10:25:54.578Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;组合数据类型：将多个数据组合为一个整体，同时又能访问每个数据&lt;/p&gt;
&lt;img src=&quot;/2020/04/23/Python%EF%BC%88%E5%88%97%E8%A1%A8%E3%80%81%E5%85%83%E7%BB%84%EF%BC%89/1.png&quot; class=&quot;&quot;&gt;

&lt;hr&gt;
&lt;h1 id=&quot;1-列表&quot;&gt;&lt;a href=&quot;#1-列表&quot; class=&quot;headerlink&quot; title=&quot;1 列表&quot;&gt;&lt;/a&gt;1 列表&lt;/h1&gt;&lt;h2 id=&quot;1-1-序列类型的索引体系&quot;&gt;&lt;a href=&quot;#1-1-序列类型的索引体系&quot; class=&quot;headerlink&quot; title=&quot;1.1 序列类型的索引体系&quot;&gt;&lt;/a&gt;1.1 序列类型的索引体系&lt;/h2&gt;&lt;p&gt;列表和字符串都是&lt;font color=&quot;red&quot;&gt;序列类型&lt;/font&gt;，序列类型的数据中元素的索引号都使用相同的索引体系。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://www.blogzhy.top/categories/Python/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="https://www.blogzhy.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>UML（第五章：顺序图、协作图）</title>
    <link href="https://www.blogzhy.top/2020/04/17/UML%EF%BC%88%E7%AC%AC%E4%BA%94%E7%AB%A0%EF%BC%9A%E9%A1%BA%E5%BA%8F%E5%9B%BE%E3%80%81%E5%8D%8F%E4%BD%9C%E5%9B%BE%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/17/UML%EF%BC%88%E7%AC%AC%E4%BA%94%E7%AB%A0%EF%BC%9A%E9%A1%BA%E5%BA%8F%E5%9B%BE%E3%80%81%E5%8D%8F%E4%BD%9C%E5%9B%BE%EF%BC%89/</id>
    <published>2020-04-17T05:34:30.000Z</published>
    <updated>2020-04-17T08:23:27.155Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/UML（第五章：顺序图、协作图）/#1&quot;&gt;5.1 交互模型概述&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/UML（第五章：顺序图、协作图）/#2&quot;&gt;5.2 顺序图&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/UML（第五章：顺序图、协作图）/#3&quot;&gt;5.3 顺序图中的消息&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/UML（第五章：顺序图、协作图）/#4&quot;&gt;5.4 建立顺序图概述&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/UML（第五章：顺序图、协作图）/#5&quot;&gt;5.5 协作图&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/UML（第五章：顺序图、协作图）/#6&quot;&gt;5.6 建立协作图概述&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/UML（第五章：顺序图、协作图）/#7&quot;&gt;5.7 交互建模中常见的问题&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;5-1-交互模型概述&quot;&gt;&lt;a href=&quot;#5-1-交互模型概述&quot; class=&quot;headerlink&quot; title=&quot;5.1 交互模型概述&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;5.1 交互模型概述&lt;/span&gt;&lt;/h1&gt;&lt;h2 id=&quot;5-1-1-静态结构和动态结构&quot;&gt;&lt;a href=&quot;#5-1-1-静态结构和动态结构&quot; class=&quot;headerlink&quot; title=&quot;5.1.1 静态结构和动态结构&quot;&gt;&lt;/a&gt;5.1.1 静态结构和动态结构&lt;/h2&gt;&lt;p&gt;所有系统均可表示为两个方面：&lt;font color=&quot;red&quot;&gt;静态结构&lt;/font&gt;和&lt;font color=&quot;red&quot;&gt;态行为&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;静态结构——使用&lt;font color=&quot;red&quot;&gt;类图&lt;/font&gt;，说明系统包含哪些对象类以及它们之间的关系。&lt;/p&gt;
&lt;p&gt;动态行为——使用&lt;font color=&quot;red&quot;&gt;顺序图、协作图、状态图、活动图&lt;/font&gt;，说明系统中的各个对象是如何交互协作来实现系统的功能，每个对象的状态变化规律。&lt;/p&gt;
&lt;h2 id=&quot;5-1-2-交互模型&quot;&gt;&lt;a href=&quot;#5-1-2-交互模型&quot; class=&quot;headerlink&quot; title=&quot;5.1.2 交互模型&quot;&gt;&lt;/a&gt;5.1.2 交互模型&lt;/h2&gt;&lt;p&gt;软件系统中的任务是通过对象之间的&lt;font color=&quot;red&quot;&gt;合作&lt;/font&gt;来完成的。对象之间的合作是通过&lt;font color=&quot;red&quot;&gt;息的传递&lt;/font&gt;实现的。&lt;/p&gt;
&lt;p&gt;对象之间的合作在UML中被称为&lt;font color=&quot;red&quot;&gt;交互&lt;/font&gt;。即&lt;font color=&quot;red&quot;&gt;交互是一组对象之间为完成某一任务（操作）而进行的一系列信息交互的行为说明&lt;/font&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="UML" scheme="https://www.blogzhy.top/categories/UML/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="UML" scheme="https://www.blogzhy.top/tags/UML/"/>
    
  </entry>
  
  <entry>
    <title>软件项目管理（第五章：IT项目时间管理）</title>
    <link href="https://www.blogzhy.top/2020/04/17/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%EF%BC%88%E7%AC%AC%E4%BA%94%E7%AB%A0%EF%BC%9AIT%E9%A1%B9%E7%9B%AE%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/17/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%EF%BC%88%E7%AC%AC%E4%BA%94%E7%AB%A0%EF%BC%9AIT%E9%A1%B9%E7%9B%AE%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%EF%BC%89/</id>
    <published>2020-04-17T02:26:01.000Z</published>
    <updated>2020-04-22T04:15:55.900Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/软件项目管理（第五章：IT项目时间管理）/#1&quot;&gt;5.1 项目时间管理概述&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/软件项目管理（第五章：IT项目时间管理）/#2&quot;&gt;5.2 活动定义&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/软件项目管理（第五章：IT项目时间管理）/#3&quot;&gt;5.3 活动排序&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/软件项目管理（第五章：IT项目时间管理）/#4&quot;&gt;5.4 活动资源估计&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/软件项目管理（第五章：IT项目时间管理）/#5&quot;&gt;5.5 活动持续时间估计&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/软件项目管理（第五章：IT项目时间管理）/#6&quot;&gt;5.6 编制项目进度计划&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/17/软件项目管理（第五章：IT项目时间管理）/#7&quot;&gt;5.7 IT项目进度控制&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;5-1-项目时间管理概述&quot;&gt;&lt;a href=&quot;#5-1-项目时间管理概述&quot; class=&quot;headerlink&quot; title=&quot;5.1 项目时间管理概述&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;5.1 项目时间管理概述&lt;/span&gt;&lt;/h1&gt;&lt;h2 id=&quot;5-1-1项目进度及项目进度管理&quot;&gt;&lt;a href=&quot;#5-1-1项目进度及项目进度管理&quot; class=&quot;headerlink&quot; title=&quot;5.1.1项目进度及项目进度管理&quot;&gt;&lt;/a&gt;5.1.1项目进度及项目进度管理&lt;/h2&gt;&lt;p&gt;项目进度管理就是采用科学的方法确定项目工期、进度，编制进度计划和资源供应计划，进行进度控制，在与质量、费用目标协调的基础上，实现项目的进度目标。&lt;/p&gt;
&lt;h2 id=&quot;5-1-2-项目进度管理过程&quot;&gt;&lt;a href=&quot;#5-1-2-项目进度管理过程&quot; class=&quot;headerlink&quot; title=&quot;5.1.2 项目进度管理过程&quot;&gt;&lt;/a&gt;5.1.2 项目进度管理过程&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;活动定义：确定完成项目各项可交付成果而需要开展的具体活动。&lt;/li&gt;
&lt;li&gt;活动排序：识别和记录计划活动之间相互逻辑关系的过程。&lt;/li&gt;
&lt;li&gt;活动资源估算：估算完成各项计划活动所需资源类型和数量的过程。&lt;/li&gt;
&lt;li&gt;活动历时估算：估计完成单项计划活动开展的具体活动时间。&lt;/li&gt;
&lt;li&gt;项目进度安排：分析计划活动顺序、计划活动持续时间、资源要求和进度制约因素，制订项目进度表的过程。&lt;/li&gt;
&lt;li&gt;项目进度控制：控制项目进度变更的过程。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="软件项目管理" scheme="https://www.blogzhy.top/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="软件项目管理" scheme="https://www.blogzhy.top/tags/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Python（程序控制2）</title>
    <link href="https://www.blogzhy.top/2020/04/16/Python%EF%BC%88%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B62%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/16/Python%EF%BC%88%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B62%EF%BC%89/</id>
    <published>2020-04-16T02:32:57.000Z</published>
    <updated>2020-04-16T04:23:13.114Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/16/Python（程序控制2）/#1&quot;&gt;1 for循环结构&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/16/Python（程序控制2）/#1&quot;&gt;2 break、continue、pass&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/16/Python（程序控制2）/#3&quot;&gt;3 循环嵌套&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-for循环结构&quot;&gt;&lt;a href=&quot;#1-for循环结构&quot; class=&quot;headerlink&quot; title=&quot;1 for循环结构&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;1 for循环结构&lt;/span&gt;&lt;/h1&gt;&lt;h2 id=&quot;1-1-for循环语句&quot;&gt;&lt;a href=&quot;#1-1-for循环语句&quot; class=&quot;headerlink&quot; title=&quot;1.1 for循环语句&quot;&gt;&lt;/a&gt;1.1 for循环语句&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;for 变量 in 序列：
    循环体&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;形如以上格式的&lt;code&gt;for&lt;/code&gt;语句可以遍历（逐个访问）序列中的元素。每次循环调取序列中的一个元素分配给变量并执行一次循环体（语句块），直到遍历整个序列中的所有元素为止。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;序列&lt;/strong&gt;是指一种基本的数据结构，序列可以是一个&lt;font color=&quot;red&quot;&gt;字符串、列表、元组、文件等&lt;/font&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://www.blogzhy.top/categories/Python/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="https://www.blogzhy.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python（程序控制1）</title>
    <link href="https://www.blogzhy.top/2020/04/15/Python%EF%BC%88%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B61%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/15/Python%EF%BC%88%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B61%EF%BC%89/</id>
    <published>2020-04-15T10:46:42.000Z</published>
    <updated>2020-04-16T04:13:49.008Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/15/Python（程序控制1）/#1&quot;&gt;1 选择结构&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/15/Python（程序控制1）/#2&quot;&gt;2 while循环结构&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/15/Python（程序控制1）/#3&quot;&gt;3 水仙花、百鸡&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;计算机程序的三种基本结构&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　按照计算机程序执行的逻辑流程，可以将计算机程序分为三种基本结构，即：顺序结构、选择结构、循环结构。&lt;/p&gt;
&lt;h1 id=&quot;1-选择结构&quot;&gt;&lt;a href=&quot;#1-选择结构&quot; class=&quot;headerlink&quot; title=&quot;1 选择结构&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;1 选择结构&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;分为：单分支结构（if语句）、分支结构（if_else语句）、多分支结构（if_elif_else语句）&lt;/p&gt;
&lt;h2 id=&quot;1-1-单分支结构（if语句）&quot;&gt;&lt;a href=&quot;#1-1-单分支结构（if语句）&quot; class=&quot;headerlink&quot; title=&quot;1.1 单分支结构（if语句）&quot;&gt;&lt;/a&gt;1.1 单分支结构（if语句）&lt;/h2&gt;&lt;p&gt;if语句是Python语言中实现单分支判断的专用语句，其基本语法格式如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：if条件后要有&lt;font color=&quot;red&quot;&gt;冒号 ：&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if 表达式:
    语句块        #必须缩进，一般缩进4个空格&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://www.blogzhy.top/categories/Python/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="https://www.blogzhy.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>软件项目管理（第四章：IT项目范围管理）</title>
    <link href="https://www.blogzhy.top/2020/04/15/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%EF%BC%88%E7%AC%AC%E5%9B%9B%E7%AB%A0%EF%BC%9AIT%E9%A1%B9%E7%9B%AE%E8%8C%83%E5%9B%B4%E7%AE%A1%E7%90%86%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/15/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%EF%BC%88%E7%AC%AC%E5%9B%9B%E7%AB%A0%EF%BC%9AIT%E9%A1%B9%E7%9B%AE%E8%8C%83%E5%9B%B4%E7%AE%A1%E7%90%86%EF%BC%89/</id>
    <published>2020-04-15T00:34:21.000Z</published>
    <updated>2020-04-15T02:08:12.040Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/15/软件项目管理（第四章：IT项目范围管理）/#1&quot;&gt;4.1 项目范围管理概述&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/15/软件项目管理（第四章：IT项目范围管理）/#2&quot;&gt;4.2 项目范围规划与范围定义&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/15/软件项目管理（第四章：IT项目范围管理）/#3&quot;&gt;4.3 项目工作分解结构技术&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/15/软件项目管理（第四章：IT项目范围管理）/#4&quot;&gt;4.4 项目范围核实与控制&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;4-1-项目范围管理概述&quot;&gt;&lt;a href=&quot;#4-1-项目范围管理概述&quot; class=&quot;headerlink&quot; title=&quot;4.1 项目范围管理概述&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;4.1 项目范围管理概述&lt;/span&gt;&lt;/h1&gt;&lt;h2 id=&quot;4-1-1-项目范围与范围管理&quot;&gt;&lt;a href=&quot;#4-1-1-项目范围与范围管理&quot; class=&quot;headerlink&quot; title=&quot;4.1.1 项目范围与范围管理&quot;&gt;&lt;/a&gt;4.1.1 项目范围与范围管理&lt;/h2&gt;&lt;p&gt;项目范围管理的过程包括以下内容：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;收集需求&lt;/li&gt;
&lt;li&gt;范围定义&lt;/li&gt;
&lt;li&gt;创建工作分解结构&lt;strong&gt;(Work Breakdown Structure，WBS)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;范围核实&lt;/li&gt;
&lt;li&gt;范围变更控制&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="软件项目管理" scheme="https://www.blogzhy.top/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="软件项目管理" scheme="https://www.blogzhy.top/tags/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>软件项目管理（第三章：IT项目整体管理）</title>
    <link href="https://www.blogzhy.top/2020/04/08/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%EF%BC%88%E7%AC%AC%E4%B8%89%E7%AB%A0%EF%BC%9AIT%E9%A1%B9%E7%9B%AE%E6%95%B4%E4%BD%93%E7%AE%A1%E7%90%86%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/08/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%EF%BC%88%E7%AC%AC%E4%B8%89%E7%AB%A0%EF%BC%9AIT%E9%A1%B9%E7%9B%AE%E6%95%B4%E4%BD%93%E7%AE%A1%E7%90%86%EF%BC%89/</id>
    <published>2020-04-08T00:48:06.000Z</published>
    <updated>2020-04-08T04:47:39.687Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/08/软件项目管理（第三章：IT项目整体管理）/#1&quot;&gt;3.1 项目启动和可行性分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/08/软件项目管理（第三章：IT项目整体管理）/#2&quot;&gt;3.2 项目管理计划&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/08/软件项目管理（第三章：IT项目整体管理）/#3&quot;&gt;3.3 IT项目目标管理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/08/软件项目管理（第三章：IT项目整体管理）/#4&quot;&gt;3.4 项目计划执行与变更控制&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/08/软件项目管理（第三章：IT项目整体管理）/#5&quot;&gt;3.5 项目收尾与验收&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;3-1-项目启动和可行性分析&quot;&gt;&lt;a href=&quot;#3-1-项目启动和可行性分析&quot; class=&quot;headerlink&quot; title=&quot;3.1 项目启动和可行性分析&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;3.1 项目启动和可行性分析&lt;/span&gt;&lt;/h1&gt;&lt;h2 id=&quot;3-1-1-项目准备和启动过程&quot;&gt;&lt;a href=&quot;#3-1-1-项目准备和启动过程&quot; class=&quot;headerlink&quot; title=&quot;3.1.1 项目准备和启动过程&quot;&gt;&lt;/a&gt;3.1.1 项目准备和启动过程&lt;/h2&gt;&lt;p&gt;在项目管理中，启动阶段是&lt;font color=&quot;red&quot;&gt;识别和启动&lt;/font&gt;一个新项目或项目新阶段的过程。&lt;/p&gt;
&lt;p&gt;完整的项目启动过程是指从项目的产生、项目概念的开发、机会研究，然后通过可行性分析、选择、优化，确定所要进行的项目，直到最后项目的正式启动。&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件项目管理" scheme="https://www.blogzhy.top/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="软件项目管理" scheme="https://www.blogzhy.top/tags/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Python（程序设计入门2）</title>
    <link href="https://www.blogzhy.top/2020/04/07/Python%EF%BC%88%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A82%EF%BC%89/"/>
    <id>https://www.blogzhy.top/2020/04/07/Python%EF%BC%88%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A82%EF%BC%89/</id>
    <published>2020-04-07T09:16:34.000Z</published>
    <updated>2020-04-09T07:03:11.712Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;/2020/04/07/Python（程序设计入门2）/#1&quot;&gt;1 基本输入/输出&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/07/Python（程序设计入门2）/#2&quot;&gt;2 字符串操作&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2020/04/07/Python（程序设计入门2）/#3&quot;&gt;3 内置函数&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-基本输入-输出&quot;&gt;&lt;a href=&quot;#1-基本输入-输出&quot; class=&quot;headerlink&quot; title=&quot;1 基本输入/输出&quot;&gt;&lt;/a&gt;&lt;span id=&quot;1&quot;&gt;1 基本输入/输出&lt;/span&gt;&lt;/h1&gt;&lt;h2 id=&quot;1-1-基本输入函数-input&quot;&gt;&lt;a href=&quot;#1-1-基本输入函数-input&quot; class=&quot;headerlink&quot; title=&quot;1.1 基本输入函数 input&quot;&gt;&lt;/a&gt;1.1 基本输入函数 input&lt;/h2&gt;&lt;p&gt;input用法：&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;red&quot;&gt;变量=input（提示字符串）&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;Python会显示提示字符串后等待用户输入，用户输入完毕（键入回车）后，将用户输入的内容以&lt;font color=&quot;red&quot;&gt;字符串的类型&lt;/font&gt;给变量赋值。&lt;/p&gt;
&lt;h2 id=&quot;1-2-基本输出函数-print&quot;&gt;&lt;a href=&quot;#1-2-基本输出函数-print&quot; class=&quot;headerlink&quot; title=&quot;1.2 基本输出函数 print&quot;&gt;&lt;/a&gt;1.2 基本输出函数 print&lt;/h2&gt;&lt;p&gt;1、字符串原样输出&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print（&amp;#39;字符串&amp;#39;）&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2、可以使用 逗号 和 加号 使得print输出多个字符串&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;print（字符串1，字符串2，字符串3）
字符串1 字符串2 字符串3&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;print（字符串1+字符串2+字符串3）
字符串1字符串2字符串3&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://www.blogzhy.top/categories/Python/"/>
    
    
      <category term="笔记" scheme="https://www.blogzhy.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="https://www.blogzhy.top/tags/Python/"/>
    
  </entry>
  
</feed>
